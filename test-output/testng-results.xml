<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-29T12:23:44Z" name="Default suite" finished-at="2022-07-29T12:24:42Z" duration-ms="57631">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-07-29T12:23:44Z" name="Default test" finished-at="2022-07-29T12:24:42Z" duration-ms="57631">
      <class name="Runner.Runner_TestNG">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:44Z" name="setExtent" finished-at="2022-07-29T17:53:44Z" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:44Z" name="setUpClass" finished-at="2022-07-29T17:53:44Z" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:45Z" name="startTest" finished-at="2022-07-29T17:53:45Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:45Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-29T17:53:57Z" duration-ms="12657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate Different Options in Animation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="ReportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:57Z" name="ReportFlush" finished-at="2022-07-29T17:53:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportFlush -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:57Z" name="endTest" finished-at="2022-07-29T17:53:57Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:57Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-29T17:54:09Z" duration-ms="12046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate Different Options in App]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:53:57Z" name="startTest" finished-at="2022-07-29T17:53:57Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:09Z" name="endTest" finished-at="2022-07-29T17:54:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:09Z" name="startTest" finished-at="2022-07-29T17:54:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="ReportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:09Z" name="ReportFlush" finished-at="2022-07-29T17:54:09Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportFlush -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:09Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-29T17:54:19Z" duration-ms="9932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate Different Options in Accessibility]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="ReportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:19Z" name="ReportFlush" finished-at="2022-07-29T17:54:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportFlush -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:19Z" name="endTest" finished-at="2022-07-29T17:54:19Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:19Z" name="startTest" finished-at="2022-07-29T17:54:19Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:19Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-29T17:54:34Z" duration-ms="14830" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate Different Options in Text]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="ReportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:34Z" name="ReportFlush" finished-at="2022-07-29T17:54:34Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportFlush -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:34Z" name="endTest" finished-at="2022-07-29T17:54:34Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:34Z" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2022-07-29T17:54:42Z" duration-ms="7836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate Different Option in Views]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:34Z" name="startTest" finished-at="2022-07-29T17:54:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cucumber.api.testng.AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="ReportFlush(org.testng.ITestResult)[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:42Z" name="ReportFlush" finished-at="2022-07-29T17:54:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=SUCCESS method=AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:Runner.Runner_TestNG@413f69cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportFlush -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:42Z" name="endTest" finished-at="2022-07-29T17:54:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:42Z" name="tearDownClass" finished-at="2022-07-29T17:54:42Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:Runner.Runner_TestNG@413f69cc]" started-at="2022-07-29T17:54:42Z" name="endReport" finished-at="2022-07-29T17:54:42Z" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- Runner.Runner_TestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
